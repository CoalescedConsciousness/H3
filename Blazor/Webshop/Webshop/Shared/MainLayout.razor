@inherits LayoutComponentBase
@inject NavigationManager Nav
@inject ILocalStorageService ls
@using Blazored.Toast.Configuration

<PageTitle>Webshop</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <button @onclick='() => Nav.NavigateTo($"/product/create")'>Create Product</button>
            <button class="btn btn-success" @onclick='() => Nav.NavigateTo("/cart")'>@cartCount <i class="fas fa-shopping-basket"></i></button>
        </div>

        <article class="content px-4">
            <CascadingValue Value="this">
                @Body
            </CascadingValue>
        </article>
    </main>
    <BlazoredToasts Position="ToastPosition.BottomRight"
                        Timeout="5"
                        IconType="IconType.FontAwesome"
                        ErrorIcon="fas fa-times-circle"
                        InfoIcon="fas fa-info"
                        SuccessIcon="fas fa-check"
                        WarningIcon="fas fa-exclamation-triangle" />
</div>

@code {
    int cartCount { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        if (await ls.ContainKeyAsync("Cart"))
        {
            string cartStr = await ls.GetItemAsStringAsync("Cart");
            var cart = cartStr.ToCartModels();

            cartCount = cart.Select(b => b.Quantity).Sum();
        }

        await base.OnInitializedAsync();
    }

    public async Task Update()
    {
        if (await ls.ContainKeyAsync("Cart"))
        {
            string basketString = await ls.GetItemAsStringAsync("Cart");
            var basket = basketString.ToCartModels();

            cartCount = basket.Select(b => b.Quantity).Sum();
        }
        StateHasChanged();
    }


}